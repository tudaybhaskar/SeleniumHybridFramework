pipeline {
    agent any
    environment {
            PATH = "/opt/homebrew/Cellar/maven/3.9.6/bin:$PATH"
    }

    stages {
        stage('Run the tests') {
            steps {
                // Perform any build steps here
                // For example: Maven build, compile code, etc.
                script {
                    try {
                        sh 'mvn clean install'
                    } catch (Exception e) {
                         // Handle the failure (optional)
                         echo "Failed to run tests: ${e.message}"
                         // Mark the stage as failed
                         currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
        stage('Check for Failed Tests') {
            steps {
                script {
                    // Run tests with failure ignoring to generate rerun_failed_tests.xml if needed
                    sh 'mvn test -DskipTests=true -Dmaven.test.failure.ignore=true'

                    // Check if there are any failed tests
                    def failedTestsCount = sh(script: 'grep -c "<failure>" target/surefire-reports/*.xml || true', returnStdout: true).trim()
                    def failedTests = failedTestsCount.isNumber() ? failedTestsCount.toInteger() : 0

                    if (failedTests > 0) {
                        // Rerun the failed tests using the rerun_failed_tests.xml file
                        sh 'mvn test -Dsurefire.suiteXmlFiles=src/test/resources/runners/rerun_failed_1tests.xml'
                    } else {
                        echo 'No failed tests to rerun.'
                    }
                }
            }
        }

        // Add more stages as needed
    }
    // Post-build actions, notifications, etc.
    post {
        // For example, send email notifications if the build fails
        failure {
            // Generate and serve Allure report
            allure([
                includeProperties: false,
                jdk: '',
                properties: [],
                reportBuildPolicy: 'ALWAYS',
                results: [[path: 'allure-results']]
            ])
        }
    }
}
